//
// RestPerformActionResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public final class RestPerformActionResponse: Codable, JSONEncodable, Hashable {

    public var affectedNodes: [RestNode]?
    public var status: RestActionStatus?
    public var tasks: [RestBackgroundAction]?

    public init(affectedNodes: [RestNode]? = nil, status: RestActionStatus? = nil, tasks: [RestBackgroundAction]? = nil) {
        self.affectedNodes = affectedNodes
        self.status = status
        self.tasks = tasks
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case affectedNodes = "AffectedNodes"
        case status = "Status"
        case tasks = "Tasks"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(affectedNodes, forKey: .affectedNodes)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(tasks, forKey: .tasks)
    }

    public static func == (lhs: RestPerformActionResponse, rhs: RestPerformActionResponse) -> Bool {
        lhs.affectedNodes == rhs.affectedNodes &&
        lhs.status == rhs.status &&
        lhs.tasks == rhs.tasks
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(affectedNodes?.hashValue)
        hasher.combine(status?.hashValue)
        hasher.combine(tasks?.hashValue)
        
    }
}

