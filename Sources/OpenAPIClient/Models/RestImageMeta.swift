//
// RestImageMeta.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public final class RestImageMeta: Codable, JSONEncodable, Hashable {

    public var height: Int?
    public var jsonEXIF: String?
    public var orientation: Int?
    public var width: Int?

    public init(height: Int? = nil, jsonEXIF: String? = nil, orientation: Int? = nil, width: Int? = nil) {
        self.height = height
        self.jsonEXIF = jsonEXIF
        self.orientation = orientation
        self.width = width
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case height = "Height"
        case jsonEXIF = "JsonEXIF"
        case orientation = "Orientation"
        case width = "Width"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(height, forKey: .height)
        try container.encodeIfPresent(jsonEXIF, forKey: .jsonEXIF)
        try container.encodeIfPresent(orientation, forKey: .orientation)
        try container.encodeIfPresent(width, forKey: .width)
    }

    public static func == (lhs: RestImageMeta, rhs: RestImageMeta) -> Bool {
        lhs.height == rhs.height &&
        lhs.jsonEXIF == rhs.jsonEXIF &&
        lhs.orientation == rhs.orientation &&
        lhs.width == rhs.width
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(height?.hashValue)
        hasher.combine(jsonEXIF?.hashValue)
        hasher.combine(orientation?.hashValue)
        hasher.combine(width?.hashValue)
        
    }
}

