//
// RestNodeUpdates.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public final class RestNodeUpdates: Codable, JSONEncodable, Hashable {

    public var bookmark: RestMetaToggle?
    public var contentLock: RestMetaToggle?
    public var metaUpdates: [RestMetaUpdate]?

    public init(bookmark: RestMetaToggle? = nil, contentLock: RestMetaToggle? = nil, metaUpdates: [RestMetaUpdate]? = nil) {
        self.bookmark = bookmark
        self.contentLock = contentLock
        self.metaUpdates = metaUpdates
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bookmark = "Bookmark"
        case contentLock = "ContentLock"
        case metaUpdates = "MetaUpdates"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(bookmark, forKey: .bookmark)
        try container.encodeIfPresent(contentLock, forKey: .contentLock)
        try container.encodeIfPresent(metaUpdates, forKey: .metaUpdates)
    }

    public static func == (lhs: RestNodeUpdates, rhs: RestNodeUpdates) -> Bool {
        lhs.bookmark == rhs.bookmark &&
        lhs.contentLock == rhs.contentLock &&
        lhs.metaUpdates == rhs.metaUpdates
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(bookmark?.hashValue)
        hasher.combine(contentLock?.hashValue)
        hasher.combine(metaUpdates?.hashValue)
        
    }
}

