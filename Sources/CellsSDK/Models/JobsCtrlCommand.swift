//
// JobsCtrlCommand.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public final class JobsCtrlCommand: Codable, JSONEncodable, Hashable {

    public var cmd: JobsCommand?
    public var jobId: String?
    public var ownerId: String?
    public var runParameters: [String: String]?
    public var taskId: String?

    public init(cmd: JobsCommand? = nil, jobId: String? = nil, ownerId: String? = nil, runParameters: [String: String]? = nil, taskId: String? = nil) {
        self.cmd = cmd
        self.jobId = jobId
        self.ownerId = ownerId
        self.runParameters = runParameters
        self.taskId = taskId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case cmd = "Cmd"
        case jobId = "JobId"
        case ownerId = "OwnerId"
        case runParameters = "RunParameters"
        case taskId = "TaskId"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(cmd, forKey: .cmd)
        try container.encodeIfPresent(jobId, forKey: .jobId)
        try container.encodeIfPresent(ownerId, forKey: .ownerId)
        try container.encodeIfPresent(runParameters, forKey: .runParameters)
        try container.encodeIfPresent(taskId, forKey: .taskId)
    }

    public static func == (lhs: JobsCtrlCommand, rhs: JobsCtrlCommand) -> Bool {
        lhs.cmd == rhs.cmd &&
        lhs.jobId == rhs.jobId &&
        lhs.ownerId == rhs.ownerId &&
        lhs.runParameters == rhs.runParameters &&
        lhs.taskId == rhs.taskId
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(cmd?.hashValue)
        hasher.combine(jobId?.hashValue)
        hasher.combine(ownerId?.hashValue)
        hasher.combine(runParameters?.hashValue)
        hasher.combine(taskId?.hashValue)
        
    }
}

