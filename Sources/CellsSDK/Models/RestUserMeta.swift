//
// RestUserMeta.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct RestUserMeta: Sendable, Codable, JSONEncodable, Hashable {

    public var editable: Bool?
    public var jsonValue: String
    public var namespace: String
    public var nodeUuid: String?

    public init(editable: Bool? = nil, jsonValue: String, namespace: String, nodeUuid: String? = nil) {
        self.editable = editable
        self.jsonValue = jsonValue
        self.namespace = namespace
        self.nodeUuid = nodeUuid
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case editable = "Editable"
        case jsonValue = "JsonValue"
        case namespace = "Namespace"
        case nodeUuid = "NodeUuid"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(editable, forKey: .editable)
        try container.encode(jsonValue, forKey: .jsonValue)
        try container.encode(namespace, forKey: .namespace)
        try container.encodeIfPresent(nodeUuid, forKey: .nodeUuid)
    }
}

