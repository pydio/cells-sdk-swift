//
// IdmSearchUserMetaRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct IdmSearchUserMetaRequest: Sendable, Codable, JSONEncodable, Hashable {

    public var metaUuids: [String]?
    public var namespace: String?
    public var nodeUuids: [String]?
    public var resourceQuery: ServiceResourcePolicyQuery?
    public var resourceSubjectOwner: String?

    public init(metaUuids: [String]? = nil, namespace: String? = nil, nodeUuids: [String]? = nil, resourceQuery: ServiceResourcePolicyQuery? = nil, resourceSubjectOwner: String? = nil) {
        self.metaUuids = metaUuids
        self.namespace = namespace
        self.nodeUuids = nodeUuids
        self.resourceQuery = resourceQuery
        self.resourceSubjectOwner = resourceSubjectOwner
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case metaUuids = "MetaUuids"
        case namespace = "Namespace"
        case nodeUuids = "NodeUuids"
        case resourceQuery = "ResourceQuery"
        case resourceSubjectOwner = "ResourceSubjectOwner"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(metaUuids, forKey: .metaUuids)
        try container.encodeIfPresent(namespace, forKey: .namespace)
        try container.encodeIfPresent(nodeUuids, forKey: .nodeUuids)
        try container.encodeIfPresent(resourceQuery, forKey: .resourceQuery)
        try container.encodeIfPresent(resourceSubjectOwner, forKey: .resourceSubjectOwner)
    }
}

