//
// RestVersionMeta.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct RestVersionMeta: Sendable, Codable, JSONEncodable, Hashable {

    public var description: String?
    public var isDraft: Bool?
    public var isHead: Bool?
    public var ownerUuid: String?
    public var versionId: String

    public init(description: String? = nil, isDraft: Bool? = nil, isHead: Bool? = nil, ownerUuid: String? = nil, versionId: String) {
        self.description = description
        self.isDraft = isDraft
        self.isHead = isHead
        self.ownerUuid = ownerUuid
        self.versionId = versionId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case description = "Description"
        case isDraft = "IsDraft"
        case isHead = "IsHead"
        case ownerUuid = "OwnerUuid"
        case versionId = "VersionId"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(isDraft, forKey: .isDraft)
        try container.encodeIfPresent(isHead, forKey: .isHead)
        try container.encodeIfPresent(ownerUuid, forKey: .ownerUuid)
        try container.encode(versionId, forKey: .versionId)
    }
}

