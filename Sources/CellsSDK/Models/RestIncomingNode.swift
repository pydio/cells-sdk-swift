//
// RestIncomingNode.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct RestIncomingNode: Sendable, Codable, JSONEncodable, Hashable {

    public var contentType: String?
    public var knownSize: String?
    public var locator: RestNodeLocator
    public var metadata: [RestUserMeta]?
    public var templateUuid: String?
    public var type: TreeNodeType

    public init(contentType: String? = nil, knownSize: String? = nil, locator: RestNodeLocator, metadata: [RestUserMeta]? = nil, templateUuid: String? = nil, type: TreeNodeType) {
        self.contentType = contentType
        self.knownSize = knownSize
        self.locator = locator
        self.metadata = metadata
        self.templateUuid = templateUuid
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case contentType = "ContentType"
        case knownSize = "KnownSize"
        case locator = "Locator"
        case metadata = "Metadata"
        case templateUuid = "TemplateUuid"
        case type = "Type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(contentType, forKey: .contentType)
        try container.encodeIfPresent(knownSize, forKey: .knownSize)
        try container.encode(locator, forKey: .locator)
        try container.encodeIfPresent(metadata, forKey: .metadata)
        try container.encodeIfPresent(templateUuid, forKey: .templateUuid)
        try container.encode(type, forKey: .type)
    }
}

