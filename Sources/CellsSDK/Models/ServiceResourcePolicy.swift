//
// ServiceResourcePolicy.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ServiceResourcePolicy: Sendable, Codable, JSONEncodable, Hashable {

    public var action: ServiceResourcePolicyAction?
    public var effect: ServiceResourcePolicyPolicyEffect?
    public var jsonConditions: String?
    public var resource: String?
    public var subject: String?
    public var id: String?

    public init(action: ServiceResourcePolicyAction? = nil, effect: ServiceResourcePolicyPolicyEffect? = nil, jsonConditions: String? = nil, resource: String? = nil, subject: String? = nil, id: String? = nil) {
        self.action = action
        self.effect = effect
        self.jsonConditions = jsonConditions
        self.resource = resource
        self.subject = subject
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case action = "Action"
        case effect = "Effect"
        case jsonConditions = "JsonConditions"
        case resource = "Resource"
        case subject = "Subject"
        case id
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(action, forKey: .action)
        try container.encodeIfPresent(effect, forKey: .effect)
        try container.encodeIfPresent(jsonConditions, forKey: .jsonConditions)
        try container.encodeIfPresent(resource, forKey: .resource)
        try container.encodeIfPresent(subject, forKey: .subject)
        try container.encodeIfPresent(id, forKey: .id)
    }
}

